#BlueJ class context
comment0.target=WordGram
comment1.params=source\ start\ size
comment1.target=WordGram(java.lang.String[],\ int,\ int)
comment2.params=source
comment2.target=int\ setHashCode(java.lang.String[])
comment3.params=
comment3.target=int\ hashCode()
comment4.params=index
comment4.target=java.lang.String\ wordAt(int)
comment5.params=
comment5.target=int\ length()
comment6.params=
comment6.target=java.lang.String\ toString()
comment7.params=o
comment7.target=boolean\ equals(java.lang.Object)
comment8.params=index\ newWord
comment8.target=void\ setWordAt(int,\ java.lang.String)
comment9.params=word
comment9.target=WordGram\ shiftAdd(java.lang.String)
comment9.text=\ Still\ not\ getting\ clear\ why\ these\ code\ not\ working.\n\ \ \ \ public\ WordGram\ shiftAdd(String\ word)\n\ \ \ \ {\n\ \ \ \ \ \ \ \ System.out.println("In\:\ "\ +\ word);\n\ \ \ \ \ \ \ \ WordGram\ out\ \=\ new\ WordGram(myWords,\ 0,\ myWords.length);\n\ \ \ \ \ \ \ \ //\ shift\ all\ words\ one\ towards\ 0\ and\ add\ word\ at\ the\ end.\n\ \ \ \ \ \ \ \ for\ (int\ i\ \=\ 0;\ i\ <\ out.length()\ -\ 1;\ i++)\n\ \ \ \ \ \ \ \ {\n\ \ \ \ \ \ \ \ \ \ \ \ out.setWordAt(i,\ out.wordAt(i+1));\n\ \ \ \ \ \ \ \ }\n\ \ \ \ \ \ \ \ out.setWordAt(out.length()-1,\ word);\n\ \ \ \ \ \ \ \ System.out.println("out\:\ "\ +\ out);\n\ \ \ \ \ \ \ \ return\ out;\n}\ Still\ not\ getting\ clear\ why\ these\ code\ not\ working.
numComments=10
